management:
  health:
    mongo.enabled: ${HEALTH_MONGO_ENABLED:true}
  endpoint:
    health:
      probes.enabled: true
      group:
        readiness.include: "*"
        liveness.include: livenessState,diskSpace,ping # streams, binders REMOVE COMMENT AFTER BINDERS IMPLEMENTATION
      logging.slow-indicator-threshold: ${HEALTH_ACTUATOR_LOGGER_TIMEOUT_DURATION:PT1S}
  endpoints:
    jmx:
      exposure.include: "*"
    web:
      exposure.include: info, health
mongo:
  request-rate-too-large:
    api:
      enabled: ${MONGO_REQUEST_RATE_TOO_LARGE_API_ENABLED:false}
      max-retry: ${MONGO_REQUEST_RATE_TOO_LARGE_API_MAX_RETRY:0}
      max-millis-elapsed: ${MONGO_REQUEST_RATE_TOO_LARGE_API_MAX_MILLIS_ELAPSED:200}
    batch:
      enabled: ${MONGO_REQUEST_RATE_TOO_LARGE_BATCH_ENABLED:true}
      max-retry: ${MONGO_REQUEST_RATE_TOO_LARGE_BATCH_MAX_RETRY:5}
      max-millis-elapsed: ${MONGO_REQUEST_RATE_TOO_LARGE_BATCH_MAX_MILLIS_ELAPSED:0}

blobStorage.connectionString: ${BLOB_STORAGE_CONNECTION_STRING:}
blobStorage.initiative.logo.containerReference: ${BLOB_STORAGE_CONTAINER_REFERENCE:}

spring:
  application:
    name: "@project.artifactId@"
    version: "@project.version@"
  jmx.enabled: true
  config:
    activate:
      on-profile: default
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017}
      database: ${MONGODB_DBNAME:rdb}
      # custom configured properties
      config:
        connectionPool:
          maxSize: ${MONGODB_CONNECTIONPOOL_MAX_SIZE:100}
          minSize: ${MONGODB_CONNECTIONPOOL_MIN_SIZE:0}
          maxWaitTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_WAIT_MS:120000}
          maxConnectionLifeTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTION_LIFE_MS:0}
          maxConnectionIdleTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTION_IDLE_MS:120000}
          maxConnecting: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTING:2}

app:
  rest-client:
    one-trust:
      service:
        name: oneTrustClient
        privacy-notices:
          base-url: ${ONE_TRUST_PRIVACYNOTICES_BASE_URL:https://api-io.dev.cstar.pagopa.it/idpay-itn/mock/api/privacynotice/v2}
          tosId: ${ONE_TRUST_TOS_ID:}
          apiKey: ${ONE_TRUST_API_KEY:}

product-file-validation:
  maxRows: 100
  schemas:
    cookinghobs:
      Codice GTIN/EAN:
        regex: "^[a-zA-Z0-9]{1,14}$"
        message: "Il Codice GTIN/EAN è obbligatorio e deve essere univoco ed alfanumerico e lungo al massimo 14 caratteri"
      Codice Prodotto:
        regex: "^[a-zA-Z0-9 ]{0,100}$"
        message: "Il Codice prodotto non deve contenere caratteri speciali o lettere accentate e deve essere lungo al massimo 100 caratteri"
      Categoria:
        regex: "^[A-G]$"
        message: "Il campo Categoria è obbligatorio"
      Paese di Produzione:
        regex: "^.{2}$"
        message: "Il Paese di Produzione è obbligatorio e deve essere composto da esattamente 2 caratteri"
      Marca:
        regex: "^.{1,100}$"
        message: "Il campo Marca è obbligatorio e deve contenere una stringa lunga al massimo 100 caratteri"
      Modello:
        regex: "^.{1,100}$"
        message: "Il campo Modello è obbligatorio e deve contenere una stringa lunga al massimo 100 caratteri"
    eprel:
      Codice EPREL:
        regex: "^\\d+$"
        message: "Il Codice EPREL è obbligatorio e deve essere un valore numerico"
      Codice GTIN/EAN:
        regex: "^[a-zA-Z0-9]{1,14}$"
        message: "Il Codice GTIN/EAN è obbligatorio e deve essere univoco ed alfanumerico e lungo al massimo 14 caratteri"
      Codice Prodotto:
        regex: "^[a-zA-Z0-9 ]{0,100}$"
        message: "Il Codice prodotto non deve contenere caratteri speciali o lettere accentate e deve essere lungo al massimo 100 caratteri"
      Categoria:
        regex: "^[A-G]$"
        message: "Il campo Categoria è obbligatorio"
      Paese di Produzione:
        regex: "^.{2}$"
        message: "Il Paese di Produzione è obbligatorio e deve essere composto da esattamente 2 caratteri"
