management:
  health:
    mongo.enabled: ${HEALTH_MONGO_ENABLED:true}
  endpoint:
    health:
      probes.enabled: true
      group:
        readiness.include: "*"
        liveness.include: livenessState,diskSpace,ping,streams,binders
      logging.slow-indicator-threshold: ${HEALTH_ACTUATOR_LOGGER_TIMEOUT_DURATION:PT1S}
  endpoints:
    jmx:
      exposure.include: "*"
    web:
      exposure.include: info, health
mongo:
  request-rate-too-large:
    api:
      enabled: ${MONGO_REQUEST_RATE_TOO_LARGE_API_ENABLED:false}
      max-retry: ${MONGO_REQUEST_RATE_TOO_LARGE_API_MAX_RETRY:0}
      max-millis-elapsed: ${MONGO_REQUEST_RATE_TOO_LARGE_API_MAX_MILLIS_ELAPSED:200}
    batch:
      enabled: ${MONGO_REQUEST_RATE_TOO_LARGE_BATCH_ENABLED:true}
      max-retry: ${MONGO_REQUEST_RATE_TOO_LARGE_BATCH_MAX_RETRY:5}
      max-millis-elapsed: ${MONGO_REQUEST_RATE_TOO_LARGE_BATCH_MAX_MILLIS_ELAPSED:0}

blobStorage:
  connectionString: ${BLOB_STORAGE_CONNECTION_STRING:}
  initiative:
    logo:
      containerReference: ${BLOB_STORAGE_CONTAINER_REFERENCE:}

spring:
  application:
    name: "@project.artifactId@"
    version: "@project.version@"
  jmx.enabled: true
  config:
    activate:
      on-profile: default
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017}
      database: ${MONGODB_DBNAME:rdb}
      # custom configured properties
      config:
        connectionPool:
          maxSize: ${MONGODB_CONNECTIONPOOL_MAX_SIZE:100}
          minSize: ${MONGODB_CONNECTIONPOOL_MIN_SIZE:0}
          maxWaitTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_WAIT_MS:120000}
          maxConnectionLifeTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTION_LIFE_MS:0}
          maxConnectionIdleTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTION_IDLE_MS:120000}
          maxConnecting: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTING:2}
  cloud:
    function:
      definition: productFileConsumer
    stream:
      binders:
        kafka-asset-notification-in:
          type: kafka
          environment:
            spring.cloud.stream:
              kafka.binder:
                brokers: ${KAFKA_BROKER:}
                configuration:
                  sasl.jaas.config: ${KAFKA_REGISTER_PRODUCT_FILE_UPLOAD_CONSUMER_SASL_JAAS_CONFIG:}
        kafka-asset-notification-out:
          type: kafka
          environment:
            spring.cloud.stream:
              kafka.binder:
                brokers: ${KAFKA_BROKER:}
                configuration:
                  sasl.jaas.config: ${KAFKA_REGISTER_PRODUCT_FILE_UPLOAD_PRODUCER_SASL_JAAS_CONFIG:}
      bindings:
        productFileProducer-out-0:
          binder:  kafka-asset-notification-out
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_ASSET_REGISTER:idpay-asset-register}
        productFileConsumer-in-0:
          binder: kafka-asset-notification-in
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_ASSET_REGISTER:idpay-asset-register}
          group: ${KAFKA_COMMANDS_GROUP_IN:idpay-asset-register-consumer-group}
      kafka:
        binder:
          auto-create-topics: false
          configuration:
            heartbeat.interval.ms: ${KAFKA_CONFIG_HEARTBEAT_INTERVAL_MS:3000}
            session.timeout.ms: ${KAFKA_CONFIG_SESSION_TIMEOUT_MS:60000}
            request.timeout.ms: ${KAFKA_CONFIG_REQUEST_TIMEOUT_MS:60000}
            sasl.mechanism: ${KAFKA_CONFIG_SASL_MECHANISM:PLAIN}
            security.protocol: ${KAFKA_CONFIG_SECURITY_PROTOCOL:SASL_SSL}
            connections.max.idle.ms: ${KAFKA_GROUP_CONFIG_CONNECTION_MAX_IDLE_TIME:180000}
            metadata.max.age.ms: ${KAFKA_GROUP_CONFIG_METADATA_MAX_AGE_INTERVAL:180000}
            max.request.size: ${KAFKA_GROUP_CONFIG_METADATA_MAX_REQUEST_SIZE:1000000}
        bindings:
          productFileProducer-out-0:
            producer:
              configuration:
                #client.id: transactionOutcome
                connections.max.idle.ms: ${KAFKA_TRANSACTION_OUTCOME_CONNECTION_MAX_IDLE_TIME:180000}
                retry.backoff.ms: ${KAFKA_TRANSACTION_OUTCOME_KAFKA_RETRY_MS:${KAFKA_RETRY_MS:10000}}
                linger.ms: ${KAFKA_TRANSACTION_OUTCOME_LINGER_MS:${KAFKA_LINGER_MS:2}}
                batch.size: ${KAFKA_TRANSACTION_OUTCOME_BATCH_SIZE:${KAFKA_BATCH_SIZE:16384}}
          productFileConsumer-in-0:
            consumer:
              autoCommitOffset: ${KAFKA_COMMANDS_AUTO_COMMIT:${KAFKA_CONSUMER_CONFIG_AUTO_COMMIT:true}}
              configuration:
                connections.max.idle.ms: ${KAFKA_COMMANDS_REQUEST_CONNECTIONS_MAX_IDLE_MS:${KAFKA_CONSUMER_CONFIG_CONNECTIONS_MAX_IDLE_MS:180000}}
                max.poll:
                  interval.ms: ${KAFKA_COMMANDS_INTERVAL_TIMEOUT_MS:${KAFKA_CONFIG_MAX_POLL_INTERVAL_TIMEOUT_MS:300000}}
                  records: ${KAFKA_COMMANDS_MAX_POLL_SIZE:${KAFKA_CONSUMER_CONFIG_MAX_POLL_SIZE:500}}
                socket.connection.setup.timeout:
                  max.ms: ${KAFKA_COMMANDS_REQUEST_CONNECTION_TIMEOUT_MAX_MS:${KAFKA_CONSUMER_CONFIG_CONNECTION_TIMEOUT_MAX_MS:200000}}
                  ms: ${KAFKA_COMMANDS_REQUEST_CONNECTION_TIMEOUT_MS:${KAFKA_CONSUMER_CONFIG_CONNECTION_TIMEOUT_MS:100000}}
              standardHeaders: ${KAFKA_COMMANDS_STANDARD_HEADERS:${KAFKA_CONSUMER_CONFIG_STANDARD_HEADERS:both}}
              startOffset: ${KAFKA_COMMANDS_REQUEST_START_OFFSET:${KAFKA_CONSUMER_CONFIG_START_OFFSET:earliest}}
  servlet:
    multipart:
      max-file-size:  2MB
      max-request-size: 2MB
app:
  rest-client:
    one-trust:
      service:
        name: oneTrustClient
        privacy-notices:
          base-url: ${ONE_TRUST_PRIVACYNOTICES_BASE_URL:https://api-io.dev.cstar.pagopa.it/idpay-itn/mock/api/privacynotice/v2}
          tosId: ${ONE_TRUST_TOS_ID:}
          apiKey: ${ONE_TRUST_API_KEY:}
    email-notification:
      service:
        name: notificationClient
        base-url:  ${NOTIFICATION_MS_BASE_URL:https://api-io.dev.cstar.pagopa.it/idpay-itn/mock/api/privacynotice/v2}
      template:
        ok: Email_RDB_EsitoProdottiOK
        partial: Email_RDB_EsitoProdottiParziale
        rejected: Email_RDB_EsclusioneProdotti
        supervisioned: Email_RDB_ContrasegnazioneProdotti
        approved: Email_RDB_RipristinoProdotti
      subject:
        ok: Prodotti elaborati con successo
        partial:  Elaborazione parziale dei prodotti
        rejected: Prodotti Esclusi
        supervisioned: Prodotti Contrassegnati
        approved: Prodotti Ripristinati
      place-holder:
        ok: productFileName
        partial: productFileName
        rejected: excludedList, formalMotivation
        supervisioned: suspendedList, formalMotivation
        approved: ripristinedList
    eprel:
      service:
        get-product : ${EPREL_BASE_URL:https://eprel.ec.europa.eu/api/product/{REGISTRATION_NUMBER}}
      product-page: ${EPREL_PRODUCT_PAGE:https://eprel.ec.europa.eu/screen/product/%s/%s}
product-file-validation:
  maxRows: 100
  maxSize: 2097152
