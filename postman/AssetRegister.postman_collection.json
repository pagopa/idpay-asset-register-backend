{
	"info": {
		"_postman_id": "14f61f8e-cd14-4d8b-a9e2-f67d6a01a07a",
		"name": "AssetRegister",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32491499"
	},
	"item": [
		{
			"name": "Product",
			"item": [
				{
					"name": "Product List",
					"item": [
						{
							"name": "KO",
							"item": []
						},
						{
							"name": "OK",
							"item": [
								{
									"name": "Filters",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															" \r",
															"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\n    \"uid\": \"{{uid_Ente}}\",\n    \"name\": \"{{name_Ente}}\",\n    \"familyName\": \"{{familyName_Ente}}\",\n    \"email\": \"{{email_Ente}}\",\n    \"orgId\": \"84c863ad-119c-4df1-898a-e1fd3058466a\",\n    \"orgFC\": \"{{orgVAT_Ente}}\",\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\n    \"orgName\": \"Ente di test IdPay\",\n    \"orgRole\": \"{{orgRole_Operatore}}\",\n    \"orgPec\": \"pec\",\n    \"orgAddress\": \"address\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/token/test",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"token",
														"test"
													]
												},
												"description": "Generated from cURL: curl --location 'https://api-io.dev.cstar.pagopa.it/idpay-itn/register/token/test' \\\n\r\n--header 'Ocp-Apim-Trace: true' \\\n\r\n--header 'Content-Type: application/json' \\\n\r\n--data-raw '{\n\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\n\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\n\r\n    \"uid\": \"83843864-f3c0-4def-badb-7f197471b72e\",\n\r\n    \"name\": \"pippo\",\n\r\n    \"familyName\": \"qwerty\",\n\r\n    \"email\": \"pippo@test.email.it\",\n\r\n    \"orgId\": \"390cea38-f2de-4bcb-a181-d6eef99fe528\",\n\r\n    \"orgVAT\": \"80117082724\",\n\r\n    \"orgName\": \"Ente di test IdPay\",\n\r\n    \"orgRole\": \"admin\",\n\r\n    \"orgPec\": \"pec\",\n\r\n    \"orgAddress\": \"address\"\n\r\n}'\n "
											},
											"response": []
										},
										{
											"name": "Filter by category",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"",
															"pm.test(\"All returned products have category = RANGEHOODS\", () => {",
															"  const data = pm.response.json();",
															"  pm.expect(data.content).to.be.an('array');",
															"  data.content.forEach(item => {",
															"    pm.expect(item.category).to.eql('RANGEHOODS');",
															"  });",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?page=0&size=10&category=RANGEHOODS",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "10"
														},
														{
															"key": "category",
															"value": "RANGEHOODS"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Filter by productFileId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"All returned products have productFileId = 6879e4ec60bb4f20f7e67b27\", () => {",
															"  const data = pm.response.json();",
															"  pm.expect(data.content).to.be.an('array');",
															"  data.content.forEach(item => pm.expect(item.batchName).to.contains('6879e4ec60bb4f20f7e67b27'));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?productFileId=6879e4ec60bb4f20f7e67b27&page=0&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "productFileId",
															"value": "6879e4ec60bb4f20f7e67b27"
														},
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Filter by eprelCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"All returned products have eprelCode = 22\", () => {",
															"  const data = pm.response.json();",
															"  pm.expect(data.content).to.be.an('array');",
															"  data.content.forEach(item =>  pm.expect(item.eprelCode).to.contains('22'));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?page=0&size=10&eprelCode=22",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "10"
														},
														{
															"key": "eprelCode",
															"value": "22"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Filter by gtinCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"All returned products have gtinCode = YERS\", () => {",
															"  const data = pm.response.json();",
															"  pm.expect(data.content).to.be.an('array');",
															"  data.content.forEach(item =>  pm.expect(item.gtinCode).to.contains('YERS'));",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?page=0&size=10&gtinCode=2068977&organizationId=84c863ad-119c-4df1-898a-e1fd3058466a",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "10"
														},
														{
															"key": "gtinCode",
															"value": "2068977"
														},
														{
															"key": "organizationId",
															"value": "84c863ad-119c-4df1-898a-e1fd3058466a"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Sorting",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															" \r",
															"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"aud\": \"{{org_aud}}\",\n  \"iss\": \"{{org_iss}}\",\n  \"uid\": \"{{org_uid_ope}}\",\n  \"name\": \"{{org_name_ope}}\",\n  \"familyName\": \"{{org_familyName_ope}}\",\n  \"email\": \"{{org_email_ope}}\",\n  \"orgId\": \"{{org_id_ope}}\",\n  \"orgVAT\": \"{{org_vat_ope}}\",\n  \"orgName\": \"{{org_name_full_ope}}\",\n  \"orgRole\": \"{{org_role_ope}}\",\n  \"orgPec\": \"{{org_pec_ope}}\",\n  \"orgAddress\": \"{{org_address_ope}}\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/token/test",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"token",
														"test"
													]
												},
												"description": "Generated from cURL: curl --location 'https://api-io.dev.cstar.pagopa.it/idpay-itn/register/token/test' \\\n\r\n--header 'Ocp-Apim-Trace: true' \\\n\r\n--header 'Content-Type: application/json' \\\n\r\n--data-raw '{\n\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\n\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\n\r\n    \"uid\": \"83843864-f3c0-4def-badb-7f197471b72e\",\n\r\n    \"name\": \"pippo\",\n\r\n    \"familyName\": \"qwerty\",\n\r\n    \"email\": \"pippo@test.email.it\",\n\r\n    \"orgId\": \"390cea38-f2de-4bcb-a181-d6eef99fe528\",\n\r\n    \"orgVAT\": \"80117082724\",\n\r\n    \"orgName\": \"Ente di test IdPay\",\n\r\n    \"orgRole\": \"admin\",\n\r\n    \"orgPec\": \"pec\",\n\r\n    \"orgAddress\": \"address\"\n\r\n}'\n "
											},
											"response": []
										},
										{
											"name": "Sort by category ascending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by category ascending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].category).to.be.at.least(data[i-1].category);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=category,asc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "category,asc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Sort by category descending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by category descending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].category).to.be.at.most(data[i-1].category);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=category,desc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "category,desc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Sort by energyClass ascending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by productCode ascending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].energyClass).to.be.at.least(data[i-1].energyClass);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=energyClass,asc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "energyClass,asc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Sort by energyClass descending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by productCode descending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].energyClass).to.be.at.most(data[i-1].energyClass);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=energyClass,desc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "energyClass,desc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Sort by batchName ascending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by batchName ascending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].category).to.be.at.least(data[i-1].category);",
															"    pm.expect(data[i].productFileId).to.be.at.least(data[i-1].productFileId);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=batchName,asc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "batchName,asc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Sort by batchName descending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by batchName descending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].category).to.be.at.most(data[i-1].category);",
															"    pm.expect(data[i].productFileId).to.be.at.most(data[i-1].productFileId);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=batchName,desc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "batchName,desc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Sort by eprelCode ascending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by eprelCode ascending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].eprelCode).to.be.at.least(data[i-1].eprelCode);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=eprelCode,asc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "eprelCode,asc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Sort by eprelCode descending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by eprelCode descending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].eprelCode).to.be.at.most(data[i-1].eprelCode);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=eprelCode,desc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "eprelCode,desc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Sort by gtinCode ascending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by gtinCode ascending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].gtinCode).to.be.at.least(data[i-1].gtinCode);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=gtinCode,asc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "gtinCode,asc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Sort by gtinCode descending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by gtinCode descending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].gtinCode).to.be.at.most(data[i-1].gtinCode);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=gtinCode,desc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "gtinCode,desc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Sort by gtinCode descending Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
															"pm.test(\"Products sorted by gtinCode descending\", () => {",
															"  const data = pm.response.json();",
															"  for (let i = 1; i < data.length; i++) {",
															"    pm.expect(data[i].gtinCode).to.be.at.most(data[i-1].gtinCode);",
															"  }",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products?sort=gtinCode,desc&page=1&size=10",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products"
													],
													"query": [
														{
															"key": "sort",
															"value": "gtinCode,desc"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "size",
															"value": "10"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "State Change",
					"item": [
						{
							"name": "L1",
							"item": [
								{
									"name": "From Uploaded",
									"item": [
										{
											"name": "To Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 403\", function () {\r",
															"    pm.response.to.have.status(403);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Rejected",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/rejected",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"rejected"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Supervisioned",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/supervised",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"supervised"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Wait Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/wait-approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"wait-approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Uploaded",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/restored",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"restored"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "From Supervised",
									"item": [
										{
											"name": "To Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"SUPERVISED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Rejected",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"SUPERVISED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/rejected",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"rejected"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Supervisioned",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"SUPERVISED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/supervised",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"supervised"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Wait Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"SUPERVISED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/wait-approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"wait-approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Uploaded",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"SUPERVISED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/restored",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"restored"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "From Approved",
									"item": [
										{
											"name": "To Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Rejected",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/rejected",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"rejected"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Supervisioned",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/supervised",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"supervised"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Wait Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/wait-approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"wait-approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Uploaded",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/restored",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"restored"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "From Wait Approved",
									"item": [
										{
											"name": "To Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"WAIT_APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Rejected",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"WAIT_APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/rejected",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"rejected"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Supervisioned",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"WAIT_APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/supervised",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"supervised"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Wait Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"WAIT_APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/wait-approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"wait-approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Uploaded",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"WAIT_APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/restored",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"restored"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "From Rejected",
									"item": [
										{
											"name": "To Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"REJECTED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Rejected",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"REJECTED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/rejected",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"rejected"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Supervisioned",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"REJECTED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/supervised",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"supervised"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Wait Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"REJECTED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/wait-approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"wait-approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Uploaded",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"REJECTED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/restored",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"restored"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													" \r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\n    \"uid\": \"{{uid_Ente}}\",\n    \"name\": \"{{name_Ente}}\",\n    \"familyName\": \"{{familyName_Ente}}\",\n    \"email\": \"{{email_Ente}}\",\n    \"orgId\": \"{{orgId_Invitalia}}\",\n    \"orgFC\": \"{{orgVAT_Ente}}\",\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\n    \"orgName\": \"Ente di test IdPay\",\n    \"orgRole\": \"{{orgRole_Invitalia}}\",\n    \"orgPec\": \"pec\",\n    \"orgAddress\": \"address\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										},
										"description": "Generated from cURL: curl --location 'https://api-io.dev.cstar.pagopa.it/idpay-itn/register/token/test' \\\n\r\n--header 'Ocp-Apim-Trace: true' \\\n\r\n--header 'Content-Type: application/json' \\\n\r\n--data-raw '{\n\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\n\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\n\r\n    \"uid\": \"83843864-f3c0-4def-badb-7f197471b72e\",\n\r\n    \"name\": \"pippo\",\n\r\n    \"familyName\": \"qwerty\",\n\r\n    \"email\": \"pippo@test.email.it\",\n\r\n    \"orgId\": \"390cea38-f2de-4bcb-a181-d6eef99fe528\",\n\r\n    \"orgVAT\": \"80117082724\",\n\r\n    \"orgName\": \"Ente di test IdPay\",\n\r\n    \"orgRole\": \"admin\",\n\r\n    \"orgPec\": \"pec\",\n\r\n    \"orgAddress\": \"address\"\n\r\n}'\n "
									},
									"response": []
								}
							]
						},
						{
							"name": "L2",
							"item": [
								{
									"name": "From Uploaded",
									"item": [
										{
											"name": "To Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 403\", function () {\r",
															"    pm.response.to.have.status(403);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Rejected",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/rejected",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"rejected"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Supervisioned",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/supervised",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"supervised"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Wait Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/wait-approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"wait-approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Uploaded",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/restored",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"restored"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "From Supervised",
									"item": [
										{
											"name": "To Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"SUPERVISED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Rejected",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"SUPERVISED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/rejected",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"rejected"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Supervisioned",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"SUPERVISED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/supervised",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"supervised"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Wait Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"SUPERVISED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/wait-approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"wait-approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Uploaded",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"SUPERVISED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/restored",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"restored"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "From Approved",
									"item": [
										{
											"name": "To Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Rejected",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/rejected",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"rejected"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Supervisioned",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/supervised",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"supervised"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Wait Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/wait-approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"wait-approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Uploaded",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/restored",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"restored"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "From Wait Approved",
									"item": [
										{
											"name": "To Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"WAIT_APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Rejected",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"WAIT_APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/rejected",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"rejected"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Supervisioned",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"WAIT_APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/supervised",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"supervised"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Wait Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"WAIT_APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/wait-approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"wait-approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Uploaded",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"WAIT_APPROVED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/restored",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"restored"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "From Rejected",
									"item": [
										{
											"name": "To Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Rejected",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/rejected",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"rejected"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Supervisioned",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/supervised",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"supervised"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Wait Approved",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/wait-approved",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"wait-approved"
													]
												}
											},
											"response": []
										},
										{
											"name": "To Uploaded",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "x-organization-id",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-organization-selected",
														"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
														"type": "text"
													},
													{
														"key": "x-user-email",
														"value": "test",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"gtinCodes\": [\r\n    \"2068977\"\r\n  ],\r\n  \"currentStatus\": \"UPLOADED\",\r\n  \"motivation\": \"motivation\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/products/update-status/restored",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"products",
														"update-status",
														"restored"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													" \r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\n    \"uid\": \"{{uid_Ente}}\",\n    \"name\": \"{{name_Ente}}\",\n    \"familyName\": \"{{familyName_Ente}}\",\n    \"email\": \"{{email_Ente}}\",\n    \"orgId\": \"{{orgId_Invitalia}}\",\n    \"orgFC\": \"{{orgVAT_Ente}}\",\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\n    \"orgName\": \"Ente di test IdPay\",\n    \"orgRole\": \"{{orgRole_InvitaliaAdmin}}\",\n    \"orgPec\": \"pec\",\n    \"orgAddress\": \"address\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										},
										"description": "Generated from cURL: curl --location 'https://api-io.dev.cstar.pagopa.it/idpay-itn/register/token/test' \\\n\r\n--header 'Ocp-Apim-Trace: true' \\\n\r\n--header 'Content-Type: application/json' \\\n\r\n--data-raw '{\n\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\n\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\n\r\n    \"uid\": \"83843864-f3c0-4def-badb-7f197471b72e\",\n\r\n    \"name\": \"pippo\",\n\r\n    \"familyName\": \"qwerty\",\n\r\n    \"email\": \"pippo@test.email.it\",\n\r\n    \"orgId\": \"390cea38-f2de-4bcb-a181-d6eef99fe528\",\n\r\n    \"orgVAT\": \"80117082724\",\n\r\n    \"orgName\": \"Ente di test IdPay\",\n\r\n    \"orgRole\": \"admin\",\n\r\n    \"orgPec\": \"pec\",\n\r\n    \"orgAddress\": \"address\"\n\r\n}'\n "
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Consent",
			"item": [
				{
					"name": "Generate Portal Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let textResponse = pm.response.text()\r",
									"\r",
									"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
									"    //verify response HTTP status \r",
									"    pm.response.to.have.status(200);\r",
									"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Ocp-Apim-Trace",
								"value": "true",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"aud\": \"{{org_aud}}\",\r\n  \"iss\": \"{{org_iss}}\",\r\n  \"uid\": \"{{org_uid_ope}}\",\r\n  \"name\": \"{{org_name_ope}}\",\r\n  \"familyName\": \"{{org_familyName_ope}}\",\r\n  \"email\": \"{{org_email_ope}}\",\r\n  \"orgId\": \"{{org_id_ope}}\",\r\n  \"orgVAT\": \"{{org_vat_ope}}\",\r\n  \"orgName\": \"{{org_name_full_ope}}\",\r\n  \"orgRole\": \"{{org_role_ope}}\",\r\n  \"orgPec\": \"{{org_pec_ope}}\",\r\n  \"orgAddress\": \"{{org_address_ope}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlIdPay}}/register/token/test",
							"host": [
								"{{baseUrlIdPay}}"
							],
							"path": [
								"register",
								"token",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{identityPortalToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlIdPay}}/register/consent",
							"host": [
								"{{baseUrlIdPay}}"
							],
							"path": [
								"register",
								"consent"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{identityPortalToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"versionId\": \"mock-version-id\",\r\n    \"firstAcceptance\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlIdPay}}/register/consent",
							"host": [
								"{{baseUrlIdPay}}"
							],
							"path": [
								"register",
								"consent"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product-Files",
			"item": [
				{
					"name": "Upload Eprel",
					"item": [
						{
							"name": "OK",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"aud\": \"{{org_aud}}\",\r\n  \"iss\": \"{{org_iss}}\",\r\n  \"uid\": \"{{org_uid_ope}}\",\r\n  \"name\": \"{{org_name_ope}}\",\r\n  \"familyName\": \"{{org_familyName_ope}}\",\r\n  \"email\": \"andrea.vitolo@emeal.nttdata.com\",\r\n  \"orgId\": \"{{org_id_ope}}\",\r\n  \"orgVAT\": \"{{org_vat_ope}}\",\r\n  \"orgName\": \"{{org_name_full_ope}}\",\r\n  \"orgRole\": \"{{org_role_ope}}\",\r\n  \"orgPec\": \"andrea.vitolo@emeal.nttdata.com\",\r\n  \"orgAddress\": \"{{org_address_ope}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Product File",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"status\", \"OK\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "x-organization-id",
												"value": "{{orgId_Ente}}",
												"type": "text"
											},
											{
												"key": "x-user-id",
												"value": "{{userIdTest}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "csv",
													"contentType": "text/csv",
													"type": "file",
													"src": "/C:/Users/anvitolo/Downloads/Eprel_Status_Not_Approved.csv"
												}
											]
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/product-files?category=TUMBLEDRYERS",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"product-files"
											],
											"query": [
												{
													"key": "category",
													"value": "TUMBLEDRYERS"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "KO",
							"item": [
								{
									"name": "Formal Error",
									"item": [
										{
											"name": "Categoria",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Eprel/eprel_ko_categoria.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{WASHINGMACHINES}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{WASHINGMACHINES}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage = \"Il campo Categoria è obbligatorio e deve essere coerente con la categoria selezionata\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Codice GTIEAN",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Eprel/eprel_ko_codice_gtiean.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{WASHINGMACHINES}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{WASHINGMACHINES}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage = \"Il Codice GTIN/EAN è obbligatorio e deve essere univoco ed alfanumerico e lungo al massimo 14 caratteri\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Codice EPREL",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Eprel/eprel_ko_codice_eprel.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{WASHINGMACHINES}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{WASHINGMACHINES}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage = \"Il Codice EPREL è obbligatorio e deve essere un valore numerico\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Codice Prodotto",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Eprel/eprel_ko_codice_prodotto.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{WASHINGMACHINES}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{WASHINGMACHINES}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage = \"Il Codice prodotto non deve contenere caratteri speciali o lettere accentate e deve essere lungo al massimo 100 caratteri\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Paese di Produzione",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Eprel/eprel_ko_paese di produzione.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{WASHINGMACHINES}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{WASHINGMACHINES}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage = \"Paese di Produzione non è un ISO 3166 valido\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Upload Cookinghobs",
					"item": [
						{
							"name": "OK",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Product File",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"status\", \"OK\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "csv",
													"contentType": "text/csv",
													"type": "file",
													"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Cookinghobs/cookinghobs_ok.csv"
												}
											]
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/product-files?category={{COOKINGHOBS}}",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"product-files"
											],
											"query": [
												{
													"key": "category",
													"value": "{{COOKINGHOBS}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "KO",
							"item": [
								{
									"name": "Formal Error",
									"item": [
										{
											"name": "Categoria",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Cookinghobs/cookinghobs_ko_categoria.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{COOKINGHOBS}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{COOKINGHOBS}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage =\"Il campo Categoria è obbligatorio e deve contenere il valore fisso 'COOKINGHOBS'\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Codice GTIEAN",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Cookinghobs/cookinghobs_ko_codice_gtiean.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{COOKINGHOBS}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{COOKINGHOBS}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage = \"Il Codice GTIN/EAN è obbligatorio e deve essere univoco ed alfanumerico e lungo al massimo 14 caratteri\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Codice Prodotto",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Cookinghobs/cookinghobs_ko_codice_prodotto.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{COOKINGHOBS}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{COOKINGHOBS}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage = \"Il Codice prodotto non deve contenere caratteri speciali o lettere accentate e deve essere lungo al massimo 100 caratteri\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Paese di Produzione",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Cookinghobs/cookinghobs_ko_paese di produzione.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{COOKINGHOBS}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{COOKINGHOBS}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage = \"Paese di Produzione non è un ISO 3166 valido\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Marca",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Cookinghobs/cookinghobs_ko_marca.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{COOKINGHOBS}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{COOKINGHOBS}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage = \"Il campo Marca è obbligatorio e deve contenere una stringa lunga al massimo 100 caratteri\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Modello",
											"item": [
												{
													"name": "Generate Portal Token",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"let textResponse = pm.response.text()\r",
																	"\r",
																	"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
																	"    //verify response HTTP status \r",
																	"    pm.response.to.have.status(200);\r",
																	"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Ocp-Apim-Trace",
																"value": "true",
																"type": "default"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/token/test",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"token",
																"test"
															]
														}
													},
													"response": []
												},
												{
													"name": "Upload Product File",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
																	"    var jsonData = pm.response.json();\r",
																	"    pm.expect(jsonData).to.be.an(\"object\");\r",
																	"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.report\");\r",
																	"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
																	"    pm.expect(jsonData).to.have.property(\"productFileId\");\r",
																	"    pm.collectionVariables.set(\"productFileId\", jsonData.productFileId);\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"protocolProfileBehavior": {
														"disabledSystemHeaders": {}
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "csv",
																	"contentType": "text/csv",
																	"type": "file",
																	"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Cookinghobs/cookinghobs_ko_modello.csv"
																}
															]
														},
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files?category={{COOKINGHOBS}}",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files"
															],
															"query": [
																{
																	"key": "category",
																	"value": "{{COOKINGHOBS}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Download Report",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"// Parse the JSON response\r",
																	"const response = pm.response.json();\r",
																	"const csvData = response.data;\r",
																	"\r",
																	"// Split the CSV data into rows\r",
																	"const rows = csvData.split('\\r\\n');\r",
																	"\r",
																	"// Get the header row and find the index of the \"Validation Errors\" column\r",
																	"const header = rows[0].split(';');\r",
																	"const validationErrorsIndex = header.indexOf('Validation Errors');\r",
																	"\r",
																	"// Expected error message\r",
																	"const expectedErrorMessage = \"Il campo Marca è obbligatorio e deve contenere una stringa lunga al massimo 100 caratteri\";\r",
																	"\r",
																	"pm.test(\"Validation Errors column is present\", function () {\r",
																	"    pm.expect(validationErrorsIndex).to.be.above(-1);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"All rows contain the expected validation error message\", function () {\r",
																	"    let allRowsValid = true;\r",
																	"    for (let i = 1; i < rows.length; i++) {\r",
																	"        if (rows[i].trim() === \"\") continue; // Skip empty rows\r",
																	"        const columns = rows[i].split(';');\r",
																	"        if (columns.length <= validationErrorsIndex || columns[validationErrorsIndex] !== expectedErrorMessage) {\r",
																	"            allRowsValid = false;\r",
																	"            break;\r",
																	"        }\r",
																	"    }\r",
																	"    pm.expect(allRowsValid).to.be.true;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{identityPortalToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
															"host": [
																"{{baseUrlIdPay}}"
															],
															"path": [
																"register",
																"product-files",
																":prodoctFileId",
																"report"
															],
															"variable": [
																{
																	"key": "prodoctFileId",
																	"value": "{{productFileId}}"
																}
															]
														}
													},
													"response": []
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Get Product-Files",
					"item": [
						{
							"name": "OK Copy",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Product Files List",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "x-organization-id",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrlIdPay}}/register/product-files",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"product-files"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "KO Copy",
							"item": []
						}
					]
				},
				{
					"name": "Csv Error",
					"item": [
						{
							"name": "Extension Error",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Product File",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.extension\");\r",
													"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "csv",
													"contentType": "text/csv",
													"type": "file",
													"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Error/eprel_template_wrong_extension.txt"
												}
											]
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/product-files?category=TEST",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"product-files"
											],
											"query": [
												{
													"key": "category",
													"value": "TEST"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Dimension Error",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Product File",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.extension\");\r",
													"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "csv",
													"contentType": "text/csv",
													"type": "file",
													"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Error/eprel_template_wrong_extension.txt"
												}
											]
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/product-files?category=TEST",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"product-files"
											],
											"query": [
												{
													"key": "category",
													"value": "TEST"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Category Error",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Product File",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.category\");\r",
													"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "csv",
													"contentType": "text/csv",
													"type": "file",
													"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Error/eprel_template_wrong_header.csv"
												}
											]
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/product-files?category=TEST",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"product-files"
											],
											"query": [
												{
													"key": "category",
													"value": "TEST"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Empty Error Copy",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Product File",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.empty\");\r",
													"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "csv",
													"contentType": "text/csv",
													"type": "file",
													"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Error/eprel_template_empty.csv"
												}
											]
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/product-files?category={{WASHINGMACHINES}}",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"product-files"
											],
											"query": [
												{
													"key": "category",
													"value": "{{WASHINGMACHINES}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Row Error",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Product File",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.maxrow\");\r",
													"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "csv",
													"contentType": "text/csv",
													"type": "file",
													"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Error/eprel_template_max_row.csv"
												}
											]
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/product-files?category={{WASHINGMACHINES}}",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"product-files"
											],
											"query": [
												{
													"key": "category",
													"value": "{{WASHINGMACHINES}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Eprel Header Error",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Product File",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.header\");\r",
													"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "csv",
													"contentType": "text/csv",
													"type": "file",
													"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Error/eprel_template_wrong_header.csv"
												}
											]
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/product-files?category={{WASHINGMACHINES}}",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"product-files"
											],
											"query": [
												{
													"key": "category",
													"value": "{{WASHINGMACHINES}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Cookinghobs Header Error",
							"item": [
								{
									"name": "Generate Portal Token",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textResponse = pm.response.text()\r",
													"\r",
													"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
													"    //verify response HTTP status \r",
													"    pm.response.to.have.status(200);\r",
													"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Ocp-Apim-Trace",
												"value": "true",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/token/test",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"token",
												"test"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload Product File",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData).to.have.property(\"errorKey\", \"product.invalid.file.header\");\r",
													"    pm.expect(jsonData).to.have.property(\"status\", \"KO\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{identityPortalToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "csv",
													"contentType": "text/csv",
													"type": "file",
													"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Error/cookinghobs_template_wrong_header.csv"
												}
											]
										},
										"url": {
											"raw": "{{baseUrlIdPay}}/register/product-files?category={{COOKINGHOBS}}",
											"host": [
												"{{baseUrlIdPay}}"
											],
											"path": [
												"register",
												"product-files"
											],
											"query": [
												{
													"key": "category",
													"value": "{{COOKINGHOBS}}"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Get Product-Files Batch Name",
					"item": [
						{
							"name": "OK",
							"item": [
								{
									"name": "Operatore",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"aud\": \"{{org_aud}}\",\r\n  \"iss\": \"{{org_iss}}\",\r\n  \"uid\": \"{{org_uid_ope}}\",\r\n  \"name\": \"{{org_name_ope}}\",\r\n  \"familyName\": \"{{org_familyName_ope}}\",\r\n  \"email\": \"{{org_email_ope}}\",\r\n  \"orgId\": \"{{org_id_ope}}\",\r\n  \"orgVAT\": \"{{org_vat_ope}}\",\r\n  \"orgName\": \"{{org_name_full_ope}}\",\r\n  \"orgRole\": \"{{org_role_ope}}\",\r\n  \"orgPec\": \"{{org_pec_ope}}\",\r\n  \"orgAddress\": \"{{org_address_ope}}\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/token/test",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Batch List",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/product-files/batch-list",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"product-files",
														"batch-list"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Invitalia",
									"item": [
										{
											"name": "Generate Portal Token",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let textResponse = pm.response.text()\r",
															"\r",
															"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
															"    //verify response HTTP status \r",
															"    pm.response.to.have.status(200);\r",
															"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Ocp-Apim-Trace",
														"value": "true",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"72c2c5f8-1c71-4614-a4b3-95e3aee71c3d\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Invitalia}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrlIdPay}}/register/token/test",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"token",
														"test"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Batch List",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{identityPortalToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "x-organization-selected",
														"value": "72c2c5f8-1c71-4614-a4b3-95e3aee71c3d",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrlIdPay}}/register/product-files/batch-list",
													"host": [
														"{{baseUrlIdPay}}"
													],
													"path": [
														"register",
														"product-files",
														"batch-list"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "KO",
							"item": []
						}
					]
				}
			]
		},
		{
			"name": "Permission",
			"item": [
				{
					"name": "OK",
					"item": [
						{
							"name": "Generate Portal Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let textResponse = pm.response.text()\r",
											"\r",
											"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrlIdPay}}/register/token/test",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"token",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Permission",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/permissions",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"permissions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "KO",
					"item": [
						{
							"name": "Generate Portal Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let textResponse = pm.response.text()\r",
											"\r",
											"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Ente}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrlIdPay}}/register/token/test",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"token",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Permission",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body contains expected fields with specific values\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"object\");\r",
											"    pm.expect(jsonData).to.have.property(\"code\", \"ROLE_PERMISSION_NOT_FOUND\");\r",
											"    pm.expect(jsonData).to.have.property(\"message\", \"Permissions not found for [admin] role\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/permissions",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"permissions"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Invitalia",
			"item": [
				{
					"name": "KO",
					"item": [
						{
							"name": "Generate Portal Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let textResponse = pm.response.text()\r",
											"\r",
											"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Invitalia}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Invitalia}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrlIdPay}}/register/token/test",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"token",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrive Info Institution",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Parse the JSON response\r",
											"const response = pm.response.json();\r",
											"pm.test(\"All fields are not null or equal to N/A\", function () {\r",
											"    pm.expect(response.address).to.satisfy(function(value) {\r",
											"        return value !== null || value === \"N/A\";\r",
											"    });\r",
											"    pm.expect(response.city).to.satisfy(function(value) {\r",
											"        return value !== null || value === \"N/A\";\r",
											"    });    \r",
											"    pm.expect(response.county).to.satisfy(function(value) {\r",
											"        return value !== null || value === \"N/A\";\r",
											"    });   \r",
											"    pm.expect(response.country).to.satisfy(function(value) {\r",
											"        return value !== null || value === \"N/A\";\r",
											"    });    \r",
											"    pm.expect(response.zipCode).to.satisfy(function(value) {\r",
											"        return value !== null || value === \"N/A\";\r",
											"    });    \r",
											"    pm.expect(response.digitalAddress).to.satisfy(function(value) {\r",
											"        return value !== null || value === \"N/A\";\r",
											"    });    \r",
											"    pm.expect(response.description).to.satisfy(function(value) {\r",
											"        return value !== null || value === \"N/A\";\r",
											"    });    \r",
											"    pm.expect(response.taxCode).to.satisfy(function(value) {\r",
											"        return value !== null || value === \"N/A\";\r",
											"    });    \r",
											"    pm.expect(response.externalId).to.satisfy(function(value) {\r",
											"        return value !== null || value === \"N/A\";\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/institutions/{{institutionIdTest}}",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"institutions",
										"{{institutionIdTest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrive Info InstitutionS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"All fields are not null or equal to N/A\", function () {\r",
											"    const response = pm.response.json();\r",
											"    response.institutions.forEach(function(institution) {\r",
											"        pm.expect(institution.institutionId).to.satisfy(function(value) {\r",
											"            return value !== null || value === \"N/A\";\r",
											"        });\r",
											"        pm.expect(institution.createdAt).to.satisfy(function(value) {\r",
											"            return value !== null || value === \"N/A\";\r",
											"        });\r",
											"        pm.expect(institution.updatedAt).to.satisfy(function(value) {\r",
											"            return value !== null || value === \"N/A\";\r",
											"        });\r",
											"        pm.expect(institution.description).to.satisfy(function(value) {\r",
											"            return value !== null || value === \"N/A\";\r",
											"        });\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/institutions/",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"institutions",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "OK",
					"item": [
						{
							"name": "Generate Portal Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let textResponse = pm.response.text()\r",
											"\r",
											"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Invitalia}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Invitalia}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrlIdPay}}/register/token/test",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"token",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrive Info Institution",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/institutions/wrongInstitutionId",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"institutions",
										"wrongInstitutionId"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Utility",
			"item": [
				{
					"name": "Eprel",
					"item": [
						{
							"name": "EPREL - Info Prodotto",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://eprel.ec.europa.eu/api/product/:REGISTRATION_NUMBER",
									"protocol": "https",
									"host": [
										"eprel",
										"ec",
										"europa",
										"eu"
									],
									"path": [
										"api",
										"product",
										":REGISTRATION_NUMBER"
									],
									"variable": [
										{
											"key": "REGISTRATION_NUMBER",
											"value": "2358401"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "EPREL API - Info Prodotto 2",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://eprel.ec.europa.eu/api/products/:PRODUCT/:REGISTRATION_NUMBER",
									"protocol": "https",
									"host": [
										"eprel",
										"ec",
										"europa",
										"eu"
									],
									"path": [
										"api",
										"products",
										":PRODUCT",
										":REGISTRATION_NUMBER"
									],
									"variable": [
										{
											"key": "PRODUCT",
											"value": "{{eprelCategory}}"
										},
										{
											"key": "REGISTRATION_NUMBER",
											"value": "{{registrationNumberTest}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Selfcare",
					"item": [
						{
							"name": "Generate Portal Token Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let textResponse = pm.response.text()\r",
											"\r",
											"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Invitalia}}\",\r\n    \"orgFC\": \"{{orgVAT_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Invitalia}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrlIdPay}}/register/token/test",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"token",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Area Riservata - Info Instituzione",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{selfcareApiKey}}"
									}
								],
								"url": {
									"raw": "https://api.dev.selfcare.pagopa.it/external/v2/institutions/:instituionId",
									"protocol": "https",
									"host": [
										"api",
										"dev",
										"selfcare",
										"pagopa",
										"it"
									],
									"path": [
										"external",
										"v2",
										"institutions",
										":instituionId"
									],
									"variable": [
										{
											"key": "instituionId",
											"value": "{{institutionIdTest}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Area Riservata - Info Instituzione Copy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{selfcareApiKey}}"
									}
								],
								"url": {
									"raw": "https://api.dev.selfcare.pagopa.it/external/v2/institutions/:instituionId",
									"protocol": "https",
									"host": [
										"api",
										"dev",
										"selfcare",
										"pagopa",
										"it"
									],
									"path": [
										"external",
										"v2",
										"institutions",
										":instituionId"
									],
									"variable": [
										{
											"key": "instituionId",
											"value": "{{institutionIdTest}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Area Riservata - Info Instituzione User",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{selfcareApiKey}}"
									}
								],
								"url": {
									"raw": "https://api.dev.selfcare.pagopa.it/external/v2/institutions/:instituionId",
									"protocol": "https",
									"host": [
										"api",
										"dev",
										"selfcare",
										"pagopa",
										"it"
									],
									"path": [
										"external",
										"v2",
										"institutions",
										":instituionId"
									],
									"variable": [
										{
											"key": "instituionId",
											"value": "{{institutionIdTest}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Area Riservata - Info Prodott",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{selfcareApiKey}}"
									}
								],
								"url": {
									"raw": "https://api.dev.selfcare.pagopa.it/external/v2/tokens/products/prod-registro-beni?status={{produtctStatus}}",
									"protocol": "https",
									"host": [
										"api",
										"dev",
										"selfcare",
										"pagopa",
										"it"
									],
									"path": [
										"external",
										"v2",
										"tokens",
										"products",
										"prod-registro-beni"
									],
									"query": [
										{
											"key": "status",
											"value": "{{produtctStatus}}"
										},
										{
											"key": "size",
											"value": "20",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "descriptioncreatedAt",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Area Riservata - Info User",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{selfcareApiKey}}"
									}
								],
								"url": {
									"raw": "https://api.dev.selfcare.pagopa.it/external/v2/users/:userId?institutionId={{institutionIdTest}}",
									"protocol": "https",
									"host": [
										"api",
										"dev",
										"selfcare",
										"pagopa",
										"it"
									],
									"path": [
										"external",
										"v2",
										"users",
										":userId"
									],
									"query": [
										{
											"key": "institutionId",
											"value": "{{institutionIdTest}}"
										}
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userIdTest}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Authorizations",
			"item": [
				{
					"name": "Invitalia",
					"item": [
						{
							"name": "Generate Portal Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let textResponse = pm.response.text()\r",
											"\r",
											"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Invitalia}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Operatore}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrlIdPay}}/register/token/test",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"token",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrive Info Institution",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/institutions/{{institutionIdTest}}",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"institutions",
										"{{institutionIdTest}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrive Info InstitutionS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/institutions/",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"institutions",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Operatore",
					"item": [
						{
							"name": "Generate Portal Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let textResponse = pm.response.text()\r",
											"\r",
											"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Invitalia}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrlIdPay}}/register/token/test",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"token",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Product File",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "csv",
											"contentType": "text/csv",
											"type": "file",
											"src": "/C:/Users/anvitolo/OneDrive - NTT DATA EMEAL/Apps/Desktop/Registro Beni/CSV/Cookinghobs/cookinghobs_ko_modello.csv"
										}
									]
								},
								"url": {
									"raw": "{{baseUrlIdPay}}/register/product-files?category={{COOKINGHOBS}}",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"product-files"
									],
									"query": [
										{
											"key": "category",
											"value": "{{COOKINGHOBS}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Download Report",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/product-files/:prodoctFileId/report",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"product-files",
										":prodoctFileId",
										"report"
									],
									"variable": [
										{
											"key": "prodoctFileId",
											"value": "{{productFileId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product Files List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "x-organization-id",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/product-files",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"product-files"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Inv + Ope",
					"item": [
						{
							"name": "Generate Portal Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let textResponse = pm.response.text()\r",
											"\r",
											"pm.test('Generate Portal Token (Ente Operatore)', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"identityPortalToken\", textResponse);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"aud\": \"idpay.register.welfare.pagopa.it\",\r\n    \"iss\": \"https://api-io.dev.cstar.pagopa.it\",\r\n    \"uid\": \"{{uid_Ente}}\",\r\n    \"name\": \"{{name_Ente}}\",\r\n    \"familyName\": \"{{familyName_Ente}}\",\r\n    \"email\": \"{{email_Ente}}\",\r\n    \"orgId\": \"{{orgId_Ente}}\",\r\n    \"orgVAT\": \"{{orgVAT_Ente}}\",\r\n    \"orgName\": \"Ente di test IdPay\",\r\n    \"orgRole\": \"{{orgRole_Ente}}\",\r\n    \"orgPec\": \"pec\",\r\n    \"orgAddress\": \"address\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrlIdPay}}/register/token/test",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"token",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Products List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "x-organization-id",
										"value": "b5ae0b41-b854-414e-8295-078595ee1db4",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/products/",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"products",
										""
									],
									"query": [
										{
											"key": "category",
											"value": "REFRIGERATORS",
											"disabled": true
										},
										{
											"key": "productCode",
											"value": null,
											"disabled": true
										},
										{
											"key": "productFileId",
											"value": null,
											"disabled": true
										},
										{
											"key": "eprelCode",
											"value": "EPREL123456",
											"disabled": true
										},
										{
											"key": "gtinCode",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Batch List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{identityPortalToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrlIdPay}}/register/product-files/batch-list",
									"host": [
										"{{baseUrlIdPay}}"
									],
									"path": [
										"register",
										"product-files",
										"batch-list"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "identityPortalToken",
			"value": ""
		},
		{
			"key": "productFileId",
			"value": ""
		}
	]
}